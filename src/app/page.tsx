"use client"

import styles from './styles/Popup.module.css'; 
import { useSpring, animated, config } from '@react-spring/web'; 
import { useState, useEffect, useCallback } from 'react'; 
import Image from 'next/image';  
import Link from 'next/link';  
import { useInView } from 'react-intersection-observer'; 
import { motion, AnimatePresence } from 'framer-motion';

interface Project {
  id: number
  title: string
  description: string
  image: string
  links: {
    github: string
  }
}

const projects: Project[] = [
  {
    id: 1,
    title: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏—è –¥–ª—è —à–∫–æ–ª—å–Ω–∏–∫–æ–≤",
    description: `üçè SchoolFood ‚Äì –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —à–∫–æ–ª—å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è 
      SchoolFood ‚Äì —ç—Ç–æ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —Å–æ–∑–¥–∞–Ω–Ω–æ–µ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –ø–∏—Ç–∞–Ω–∏—è —à–∫–æ–ª—å–Ω–∏–∫–æ–≤. 
      –û–Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∫–∞–ª–æ—Ä–∏–π, –º–∞–∫—Ä–æ–Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤ –∏ –≤–æ–¥—ã, 
      –≤—ã–±–∏—Ä–∞—Ç—å –±–ª—é–¥–∞ –∏–∑ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –º–µ–Ω—é –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º –ø–∏—Ç–∞–Ω–∏–µ–º —Å —É—á–µ—Ç–æ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
      
      Designed by Maria Novotnya | Developed by nanautee`,
    image: "/project1.png",
    links: {
      github: "https://github.com/nanautee/SchoolFood"
    }
  },
  {
    id: 2,
    title: "–°–∞–π—Ç –ø—Ä–∏—é—Ç–∞ –¥–ª—è —Å–æ–±–∞–∫",
    description: "üê∂ DOGSHELTERnext ‚Äì –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏—é—Ç–∞ —Å–æ–±–∞–∫. –î–æ–±—Ä—ã–µ –†—É–∫–∏ ‚Äì —ç—Ç–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏—é—Ç–æ–º –¥–ª—è —Å–æ–±–∞–∫. –û–Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–ª–µ–¥–∏—Ç—å –∑–∞ –ø–∏—Ç–æ–º—Ü–∞–º–∏, –¥–æ–±–∞–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∏—Ö, —É–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ–º —É—Å—ã–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –≤–æ–ª–æ–Ω—Ç—ë—Ä–∞–º–∏ –∏ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è–º–∏.\n\nDesigned by Maria Novotnya | Developed by nanautee",
    image: "/project2.png",
    links: {
      github: "https://github.com/nanautee/DOGSHELTERnext"
    }
  },
];

const AnimatedDiv = animated('div');
const AnimatedH3 = animated('h3');
const AnimatedModal = animated('div');

export default function Home() {
  const [currentIndex, setCurrentIndex] = useState(1);
  const [selectedProject, setSelectedProject] = useState<Project | null>(null);
  const [isLoaded, setIsLoaded] = useState(false);

  useEffect(() => {
    setIsLoaded(true);
  }, []);

  const slideProps = useSpring({
    from: { transform: 'translateX(100%)', opacity: 0 },
    to: { 
      transform: 'translateX(0%)', 
      opacity: isLoaded ? 1 : 0 
    },
    reset: true,
    config: { tension: 280, friction: 60 },
    key: currentIndex, // This will trigger animation on index change
  });

  const titleProps = useSpring({
    from: { transform: 'translateY(20px)', opacity: 0 },
    to: { transform: 'translateY(0px)', opacity: 1 },
    delay: 200,
    reset: true,
    config: { tension: 280, friction: 60 },
    key: currentIndex,
  });

  const modalSpring = useSpring({
    opacity: selectedProject ? 1 : 0,
    transform: selectedProject ? 'translateY(0)' : 'translateY(-100%)',
    config: config.gentle,
  });

  const nextSlide = () => {
    setCurrentIndex((prev) => (prev + 1) % projects.length);
  };

  const prevSlide = () => {
    setCurrentIndex((prev) => (prev - 1 + projects.length) % projects.length);
  };

  return (
    <main>
      <section className={styles.section}>
        <div className={styles.leftSide}></div>
        <div className={styles.rightSide}></div>
        <div className={styles.text}>
          <span>–í–ê–ú</span>
          <span>–ù–£–ñ–ï–ù</span>
          <span>–°–ê–ô–¢</span>
          <span>?</span>
        </div>
      </section>

      <section className={styles.infoSection}>
        <div className={styles.infoCard}>
          <h2 className={styles.cardTitle}>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫</h2>
          <p className={styles.cardText}>
            –î–µ–Ω–∏—Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ Next.js, React –∏ TypeScript –ò—Å–ø–æ–ª—å–∑—É—é Tailwind CSS –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏, —Ä–∞–±–æ—Ç–∞—é —Å REST API –∏ GraphQL, –∞ —Ç–∞–∫–∂–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É—é —Å 3D (Three.js, R3F).

–¶–µ–Ω—é —á–∏—Å—Ç—ã–π –∫–æ–¥ –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º, —Å—Ç–∞—Ä–∞—é—Å—å –¥–µ–ª–∞—Ç—å –≤—Å—ë –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω–æ –ø–æ –¥–∏–∑–∞–π–Ω—É. –ò–Ω—Ç–µ—Ä–µ—Å—É—é—Å—å –∞–Ω–∏–º–∞—Ü–∏–µ–π, UI/UX –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—Ä–æ–∫–∞—á–∏–≤–∞—é —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏.  —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∏–¥–µ–π
          </p>
        </div>
        
        <div className={`${styles.infoCard} ${styles.infoCardRight}`}>
          <h2 className={styles.cardTitle}>–î–∏–∑–∞–π–Ω–µ—Ä</h2>
          <p className={styles.cardText}>
          –Ø UI/UX –¥–∏–∑–∞–π–Ω–µ—Ä, —Å–æ–∑–¥–∞—é—â–∏–π —Å—Ç–∏–ª—å–Ω—ã–µ –∏ —É–¥–æ–±–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è –≤–µ–± –∏ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏, –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ –∞–Ω–∏–º–∞—Ü–∏—è—Ö —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Figma –∏ Adobe XD. –°—Ç—Ä–µ–º–ª—é—Å—å –∫ —Ç–æ—á–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∏–∑–∞–π–Ω–∞ –∏ –≤—Å–µ–≥–¥–∞ —É—á–∏—Ç—ã–≤–∞—é –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –†–∞–±–æ—Ç–∞—é –≤ –∫–æ–º–∞–Ω–¥–µ, —Ü–µ–Ω—é –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º –∏ –≤—Å–µ–≥–¥–∞
          </p>
        </div>
      </section>

      <section className={styles.infoSection}>
        <div className={styles.contactCard}>
          <div style={{ width: '100%', textAlign: 'center' }}>
            <h2 className={styles.contactTitle}>–•–æ—Ç–∏—Ç–µ –æ–±—Å—É–¥–∏—Ç—å –ø—Ä–æ–µ–∫—Ç?</h2>
          </div>
          <p className={styles.contactText}>
          –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–∞–π—Ç–æ–≤, –¥–∏–∑–∞–π–Ω–æ–≤ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –≤–∞—à–∏–º —Ü–µ–ª—è–º –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏, –∏ –º—ã –ø–æ–º–æ–∂–µ–º —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤–∞—à–∏ –∏–¥–µ–∏, —Å–¥–µ–ª–∞–≤ –∏—Ö —É–¥–æ–±–Ω—ã–º–∏, —Å—Ç–∏–ª—å–Ω—ã–º–∏ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º–∏! üöÄ


          </p>
          <div className={styles.buttonContainer}>
            <a href="https://t.me/WWHubWW" className={styles.contactButton}>
              Telegram
            </a>
           
          </div>
        </div>
      </section>

      <section className={styles.portfolioSection}>
        <h2 className={styles.portfolioTitle}>–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ</h2>
        <div className={styles.portfolioContainer}>
          <button onClick={prevSlide} className={styles.sliderButton}>‚Üê</button>
          <div className={styles.portfolioContent}>
            <AnimatedDiv style={slideProps} className={styles.portfolioSlide}>
              <Image 
                src={projects[currentIndex].image}
                alt={projects[currentIndex].title}
                width={1200}
                height={675}
                priority={currentIndex === 1} // Prioritize initial image
                className={styles.portfolioImage}
                onClick={() => setSelectedProject(projects[currentIndex])}
                onLoad={() => setIsLoaded(true)}
              />
            </AnimatedDiv>
            <AnimatedH3 style={titleProps} className={styles.portfolioTitle}>
              {projects[currentIndex].title}
            </AnimatedH3>
          </div>
          <button onClick={nextSlide} className={styles.sliderButton}>‚Üí</button>
        </div>
        <div className={styles.portfolioDots}>
          {projects.map((_, index) => (
            <button
              key={index}
              className={`${styles.dot} ${index === currentIndex ? styles.activeDot : ''}`}
              onClick={() => setCurrentIndex(index)}
            />
          ))}
        </div>
        
        <div className={styles.portfolioLinks}>
          <div className={styles.portfolioCredit}>
           
            <a 
              href="https://www.behance.net/masfhgfgdrygx" 
              target="_blank" 
              rel="noopener noreferrer"
              className={styles.creditLink}
            >
              –ú–∞—Ä–∏—è –Ω–∞ Behance
            </a>
          </div>
          <div className={styles.portfolioCredit}>
           
            <a 
              href="https://github.com/nanautee" 
              target="_blank" 
              rel="noopener noreferrer"
              className={styles.creditLink}
            >
              –î–µ–Ω–∏—Å –Ω–∞ GitHub
            </a>
          </div>
        </div>
      </section>

      {/* Modal */}
      {selectedProject && (
        <AnimatedModal style={modalSpring} className={styles.modal}>
          <div className={styles.modalContent}>
            <button 
              className={styles.modalClose}
              onClick={() => setSelectedProject(null)}
            >
              √ó
            </button>
            <Image 
              src={selectedProject.image}
              alt={selectedProject.title}
              width={800}
              height={450}
              className={styles.modalImage}
            />
            <h2 className={styles.modalTitle}>{selectedProject.title}</h2>
            <p className={styles.modalDescription}>{selectedProject.description}</p>
            <div className={styles.modalLinks}>
              <a 
                href={selectedProject.links.github} 
                target="_blank" 
                rel="noopener noreferrer"
                className={styles.modalLink}
              >
                GitHub
              </a>
            </div>
          </div>
        </AnimatedModal>
      )}
    </main>
  );
}